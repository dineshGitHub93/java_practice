<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="1" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-12T21:43:09 IST" name="Default suite" finished-at="2025-04-12T21:43:17 IST" duration-ms="7916">
    <groups>
    </groups>
    <test started-at="2025-04-12T21:43:09 IST" name="Default test" finished-at="2025-04-12T21:43:17 IST" duration-ms="7916">
      <class name="com.selenium.learning.WindowHandles">
        <test-method is-config="true" signature="setupExtent()[pri:0, instance:com.selenium.learning.WindowHandles@1dac5ef]" started-at="2025-04-12T21:43:09 IST" name="setupExtent" finished-at="2025-04-12T21:43:09 IST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupExtent -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.selenium.learning.WindowHandles@1dac5ef]" started-at="2025-04-12T21:43:09 IST" name="setup" finished-at="2025-04-12T21:43:11 IST" duration-ms="1785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testWindowHandles()[pri:0, instance:com.selenium.learning.WindowHandles@1dac5ef]" started-at="2025-04-12T21:43:11 IST" name="testWindowHandles" finished-at="2025-04-12T21:43:17 IST" duration-ms="6057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWindowHandles -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.selenium.learning.WindowHandles@1dac5ef]" started-at="2025-04-12T21:43:17 IST" name="tearDown" finished-at="2025-04-12T21:43:17 IST" duration-ms="15" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWindowHandles status=SUCCESS method=WindowHandles.testWindowHandles()[pri:0, instance:com.selenium.learning.WindowHandles@1dac5ef] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture path must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture path must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:34)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:40)
at com.selenium.learning.Base.tearDown(Base.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.learning.WindowHandles -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
